#!groovy

properties([
    [
        $class: 'GithubProjectProperty',
        displayName: 'Divorce Case Progression Service',
        projectUrlStr: 'https://github.com/hmcts/div-case-progression-service'
    ],
    pipelineTriggers([
        [$class: 'GitHubPushTrigger']
    ])
])

@Library("Infrastructure")

def type = "java"
def product = "div"
def component = "cps"

def channel = '#div-dev'

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [ $class: 'AzureKeyVaultSecret',
      secretType: 'Secret',
      name: secretName,
      version: '',
      envVariable: envVar
    ]
}

List<LinkedHashMap<String, Object>> secrets = [
    secret("ccd-submission-s2s-auth-secret", "AUTH_PROVIDER_SERVICE_CLIENT_KEY"),
    secret("div-doc-s2s-auth-secret", "DGS_IDAM_AUTH_SECRET"),
    secret("draft-store-api-encryption-key", 'DRAFT_STORE_API_ENCRYPTION_KEY')
]

withPipeline(type , product, component) {

    enableDockerBuild()
    
    loadVaultSecrets(secrets)

    before('functionalTest:aat') {
        env.ITEST_ENVIRONMENT = "aat"
    }

    after('functionalTest:aat') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }

    before('functionalTest:preview') {
        env.ITEST_ENVIRONMENT = "preview"
    }

    after('functionalTest:preview') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }

    after('checkout') {
        echo '${product}-${component} checked out'
    }
    enableSlackNotifications(channel)
}
